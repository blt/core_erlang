module 'hello' ['main'/0,
		'module_info'/0,
		'module_info'/1]
    attributes []
'main'/0 =
    %% Line 5
    fun () ->
	do  %% Line 6
	    apply 'blast_space'/0
		()
	    %% Line 9
	    call 'io':'format'
		([84|[104|[105|[115|[32|[105|[115|[32|[113|[117|[111|[116|[101|[100|[32|[126|[112|[32|[97|[110|[100|[32|[116|[104|[105|[115|[32|[105|[115|[32|[110|[111|[116|[32|[126|[112|[126|[110]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]], ['NotUsed'|['not_used']])
'blast_space'/0 =
    %% Line 11
    fun () ->
	%% Line 12
	case call 'gen_udp':'open'
		 (0) of
	  <{'ok',Socket}> when 'true' ->
	      let <_cor2> =
		  %% Line 13
		  call 'gen_udp':'send'
		      (Socket, {127,0,0,1}, 1987, #{#<115>(8,1,'integer',['unsigned'|['big']]),
						    #<101>(8,1,'integer',['unsigned'|['big']]),
						    #<101>(8,1,'integer',['unsigned'|['big']]),
						    #<32>(8,1,'integer',['unsigned'|['big']]),
						    #<116>(8,1,'integer',['unsigned'|['big']]),
						    #<104>(8,1,'integer',['unsigned'|['big']]),
						    #<105>(8,1,'integer',['unsigned'|['big']]),
						    #<115>(8,1,'integer',['unsigned'|['big']]),
						    #<32>(8,1,'integer',['unsigned'|['big']]),
						    #<98>(8,1,'integer',['unsigned'|['big']]),
						    #<105>(8,1,'integer',['unsigned'|['big']]),
						    #<110>(8,1,'integer',['unsigned'|['big']]),
						    #<97>(8,1,'integer',['unsigned'|['big']]),
						    #<114>(8,1,'integer',['unsigned'|['big']]),
						    #<121>(8,1,'integer',['unsigned'|['big']]),
						    #<0>(8,1,'integer',['unsigned'|['big']]),
						    #<1>(8,1,'integer',['unsigned'|['big']])}#)
	      in  %% Line 13
		  case _cor2 of
		    <'ok'> when 'true' ->
			( _cor2
			  -| ['compiler_generated'] )
		    ( <_cor1> when 'true' ->
			  primop 'match_fail'
			      ({'badmatch',_cor1})
		      -| ['compiler_generated'] )
		  end
	  ( <_cor0> when 'true' ->
		primop 'match_fail'
		    ({'badmatch',_cor0})
	    -| ['compiler_generated'] )
	end
'module_info'/0 =
    fun () ->
	call 'erlang':'get_module_info'
	    ('hello')
'module_info'/1 =
    fun (_cor0) ->
	call 'erlang':'get_module_info'
	    ('hello', _cor0)
end